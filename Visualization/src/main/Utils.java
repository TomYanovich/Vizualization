package main;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.maxmind.geoip.LookupService;

import edu.stanford.nlp.ling.CoreAnnotations.LemmaAnnotation;
import edu.stanford.nlp.ling.CoreAnnotations.SentencesAnnotation;
import edu.stanford.nlp.ling.CoreAnnotations.TokensAnnotation;
import edu.stanford.nlp.pipeline.Annotation;
import edu.stanford.nlp.pipeline.StanfordCoreNLP;
import edu.stanford.nlp.util.CoreMap;

public class Utils {
	
	public static final boolean FOREIGN = true;
	public static final boolean DOMESTIC = true;
	private static LookupService cl;
	
	public static LookupService getLookupService(){
		if (cl == null){
			try {
				cl = new LookupService("GeoLiteCity.dat",LookupService.GEOIP_MEMORY_CACHE | LookupService.GEOIP_CHECK_CACHE);
				return cl;
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return cl;
	}
			
	public static String getDomainName(String url) throws URISyntaxException {
		URI uri = new URI(url);
		String domain = uri.getHost();
		return domain.startsWith("www.") ? domain.substring(4) : domain;
	}
	
	public static void exportCollection(Collection<String> coll, String fileName) throws IOException {
		File file = new File(fileName);
		BufferedWriter bw = new BufferedWriter(new FileWriter(file + ".txt"));
		for (String keyword : coll) {
			bw.write(keyword);
			bw.newLine();
		}
		bw.close();
	}

	public static int countMatches(String text, String str) {
		Pattern pattern = Pattern.compile("^(.*?(\\b" + str + "\\b)[^$]*)$",
				Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);
		Matcher matcher = pattern.matcher(text);
		int count = 0;
		while (matcher.find()) {
			count++;
		}
		return count;
	}

	public static Calendar parseDateISO8601(String iso8601_date) throws ParseException {

		DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.US);
		sdf.setTimeZone(TimeZone.getTimeZone("GMT"));
		Date date = sdf.parse(iso8601_date);
		Calendar cal = Calendar.getInstance();
		cal.setTime(date);
		return cal;
	}

	public static String formatDateISO8601(Date date) {
		DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.US);
		sdf.setTimeZone(TimeZone.getTimeZone("GMT"));
		return sdf.format(date);
	}
	
	public static int getDateDiff(Calendar date1, Calendar date2, TimeUnit timeUnit) {
		long diffInMillies = date2.getTimeInMillis() - date1.getTimeInMillis();
		return (int) timeUnit.convert(diffInMillies, TimeUnit.MILLISECONDS);
	}
	
	public static String lemmatize(String word){
		StanfordCoreNLP pipeline = new StanfordCoreNLP(new Properties() {
			private static final long serialVersionUID = 1L;{
				setProperty("annotators", "tokenize,ssplit,pos,lemma");
			}
		});

		Annotation tokenAnnotation = new Annotation(word);
		pipeline.annotate(tokenAnnotation);
		List<CoreMap> list = tokenAnnotation.get(SentencesAnnotation.class);
		return list.get(0).get(TokensAnnotation.class).get(0).get(LemmaAnnotation.class);
	}
	
	public static final Set<String> STOPWORDS = Collections.unmodifiableSet(new HashSet<String>() {
		private static final long serialVersionUID = 1L;

		{
			add("a's");
			add("able");
			add("about");
			add("above");
			add("according");
			add("accordingly");
			add("across");
			add("actually");
			add("after");
			add("afterwards");
			add("again");
			add("against");
			add("ain't");
			add("all");
			add("allow");
			add("allows");
			add("almost");
			add("alone");
			add("along");
			add("already");
			add("also");
			add("although");
			add("always");
			add("am");
			add("among");
			add("amongst");
			add("an");
			add("and");
			add("another");
			add("any");
			add("anybody");
			add("anyhow");
			add("anyone");
			add("anything");
			add("anyway");
			add("anyways");
			add("anywhere");
			add("apart");
			add("appear");
			add("appreciate");
			add("appropriate");
			add("are");
			add("aren't");
			add("around");
			add("as");
			add("aside");
			add("ask");
			add("asking");
			add("associated");
			add("at");
			add("available");
			add("away");
			add("awfully");
			add("b");
			add("be");
			add("became");
			add("because");
			add("become");
			add("becomes");
			add("becoming");
			add("been");
			add("before");
			add("beforehand");
			add("behind");
			add("being");
			add("believe");
			add("below");
			add("beside");
			add("besides");
			add("best");
			add("better");
			add("between");
			add("beyond");
			add("both");
			add("brief");
			add("but");
			add("by");
			add("c");
			add("c'mon");
			add("c's");
			add("came");
			add("can");
			add("can't");
			add("cannot");
			add("cant");
			add("cause");
			add("causes");
			add("certain");
			add("certainly");
			add("changes");
			add("clearly");
			add("co");
			add("com");
			add("come");
			add("comes");
			add("concerning");
			add("consequently");
			add("consider");
			add("considering");
			add("contain");
			add("containing");
			add("contains");
			add("corresponding");
			add("could");
			add("couldn't");
			add("course");
			add("currently");
			add("d");
			add("definitely");
			add("described");
			add("despite");
			add("did");
			add("didn't");
			add("different");
			add("do");
			add("does");
			add("doesn't");
			add("doing");
			add("don't");
			add("done");
			add("down");
			add("downwards");
			add("during");
			add("e");
			add("each");
			add("edu");
			add("eg");
			add("eight");
			add("either");
			add("else");
			add("elsewhere");
			add("enough");
			add("entirely");
			add("especially");
			add("et");
			add("etc");
			add("even");
			add("ever");
			add("every");
			add("everybody");
			add("everyone");
			add("everything");
			add("everywhere");
			add("ex");
			add("exactly");
			add("example");
			add("except");
			add("f");
			add("far");
			add("few");
			add("fifth");
			add("first");
			add("five");
			add("followed");
			add("following");
			add("follows");
			add("for");
			add("former");
			add("formerly");
			add("forth");
			add("four");
			add("from");
			add("further");
			add("furthermore");
			add("g");
			add("get");
			add("gets");
			add("getting");
			add("given");
			add("gives");
			add("go");
			add("goes");
			add("going");
			add("gone");
			add("got");
			add("gotten");
			add("greetings");
			add("h");
			add("had");
			add("hadn't");
			add("happens");
			add("hardly");
			add("has");
			add("hasn't");
			add("have");
			add("haven't");
			add("having");
			add("he");
			add("he's");
			add("hello");
			add("help");
			add("hence");
			add("her");
			add("here");
			add("here's");
			add("hereafter");
			add("hereby");
			add("herein");
			add("hereupon");
			add("hers");
			add("herself");
			add("hi");
			add("him");
			add("himself");
			add("his");
			add("hither");
			add("hopefully");
			add("how");
			add("howbeit");
			add("however");
			add("i");
			add("i'd");
			add("i'll");
			add("i'm");
			add("i've");
			add("ie");
			add("if");
			add("ignored");
			add("immediate");
			add("in");
			add("inasmuch");
			add("inc");
			add("indeed");
			add("indicate");
			add("indicated");
			add("indicates");
			add("inner");
			add("insofar");
			add("instead");
			add("into");
			add("inward");
			add("is");
			add("ish");
			add("isn't");
			add("it");
			add("it'd");
			add("it'll");
			add("it's");
			add("its");
			add("itself");
			add("j");
			add("just");
			add("k");
			add("keep");
			add("keeps");
			add("kept");
			add("know");
			add("knows");
			add("known");
			add("l");
			add("last");
			add("lately");
			add("later");
			add("latter");
			add("latterly");
			add("least");
			add("less");
			add("lest");
			add("let");
			add("let's");
			add("like");
			add("liked");
			add("likely");
			add("little");
			add("look");
			add("looking");
			add("looks");
			add("ltd");
			add("m");
			add("mainly");
			add("many");
			add("may");
			add("maybe");
			add("me");
			add("mean");
			add("meanwhile");
			add("merely");
			add("might");
			add("more");
			add("moreover");
			add("most");
			add("mostly");
			add("much");
			add("must");
			add("my");
			add("myself");
			add("n");
			add("name");
			add("namely");
			add("nd");
			add("near");
			add("nearly");
			add("necessary");
			add("need");
			add("needs");
			add("neither");
			add("never");
			add("nevertheless");
			add("new");
			add("next");
			add("nine");
			add("no");
			add("nobody");
			add("non");
			add("none");
			add("noone");
			add("nor");
			add("normally");
			add("not");
			add("nothing");
			add("novel");
			add("now");
			add("nowhere");
			add("o");
			add("obviously");
			add("of");
			add("off");
			add("often");
			add("oh");
			add("ok");
			add("okay");
			add("old");
			add("on");
			add("once");
			add("one");
			add("ones");
			add("only");
			add("onto");
			add("or");
			add("other");
			add("others");
			add("otherwise");
			add("ought");
			add("our");
			add("ours");
			add("ourselves");
			add("out");
			add("outside");
			add("over");
			add("overall");
			add("own");
			add("p");
			add("particular");
			add("particularly");
			add("per");
			add("perhaps");
			add("placed");
			add("please");
			add("plus");
			add("possible");
			add("presumably");
			add("probably");
			add("provides");
			add("q");
			add("que");
			add("quite");
			add("qv");
			add("r");
			add("rather");
			add("rd");
			add("re");
			add("really");
			add("reasonably");
			add("regarding");
			add("regardless");
			add("regards");
			add("relatively");
			add("respectively");
			add("right");
			add("s");
			add("said");
			add("same");
			add("saw");
			add("say");
			add("saying");
			add("says");
			add("second");
			add("secondly");
			add("see");
			add("seeing");
			add("seem");
			add("seemed");
			add("seeming");
			add("seems");
			add("seen");
			add("self");
			add("selves");
			add("sensible");
			add("sent");
			add("serious");
			add("seriously");
			add("seven");
			add("several");
			add("shall");
			add("she");
			add("should");
			add("shouldn't");
			add("since");
			add("six");
			add("so");
			add("some");
			add("somebody");
			add("somehow");
			add("someone");
			add("something");
			add("sometime");
			add("sometimes");
			add("somewhat");
			add("somewhere");
			add("soon");
			add("sorry");
			add("specified");
			add("specify");
			add("specifying");
			add("still");
			add("sub");
			add("such");
			add("sup");
			add("sure");
			add("t");
			add("t's");
			add("take");
			add("taken");
			add("tell");
			add("tends");
			add("th");
			add("than");
			add("thank");
			add("thanks");
			add("thanx");
			add("that");
			add("that's");
			add("thats");
			add("the");
			add("their");
			add("theirs");
			add("them");
			add("themselves");
			add("then");
			add("thence");
			add("there");
			add("there's");
			add("thereafter");
			add("thereby");
			add("therefore");
			add("therein");
			add("theres");
			add("thereupon");
			add("these");
			add("they");
			add("they'd");
			add("they'll");
			add("they're");
			add("they've");
			add("think");
			add("third");
			add("this");
			add("thorough");
			add("thoroughly");
			add("those");
			add("though");
			add("three");
			add("through");
			add("throughout");
			add("thru");
			add("thus");
			add("to");
			add("together");
			add("too");
			add("took");
			add("toward");
			add("towards");
			add("tried");
			add("tries");
			add("truly");
			add("try");
			add("trying");
			add("twice");
			add("two");
			add("u");
			add("un");
			add("under");
			add("unfortunately");
			add("unless");
			add("unlikely");
			add("until");
			add("unto");
			add("up");
			add("upon");
			add("us");
			add("use");
			add("used");
			add("useful");
			add("uses");
			add("using");
			add("usually");
			add("uucp");
			add("v");
			add("value");
			add("various");
			add("very");
			add("via");
			add("viz");
			add("vs");
			add("w");
			add("want");
			add("wants");
			add("was");
			add("wasn't");
			add("way");
			add("we");
			add("we'd");
			add("we'll");
			add("we're");
			add("we've");
			add("welcome");
			add("well");
			add("went");
			add("were");
			add("weren't");
			add("what");
			add("what's");
			add("whatever");
			add("when");
			add("whence");
			add("whenever");
			add("where");
			add("where's");
			add("whereafter");
			add("whereas");
			add("whereby");
			add("wherein");
			add("whereupon");
			add("wherever");
			add("whether");
			add("which");
			add("while");
			add("whither");
			add("who");
			add("who's");
			add("whoever");
			add("whole");
			add("whom");
			add("whose");
			add("why");
			add("will");
			add("willing");
			add("wish");
			add("with");
			add("within");
			add("without");
			add("won't");
			add("won");
			add("wonder");
			add("would");
			add("would");
			add("wouldn't");
			add("x");
			add("y");
			add("yes");
			add("yet");
			add("you");
			add("you'd");
			add("you'll");
			add("you're");
			add("you've");
			add("your");
			add("yours");
			add("yourself");
			add("yourselves");
			add("z");
			add("zero");
			add("true");
			add("false");
			add("## additional ##");
			add("&amp");
			add("&gt");
			add("&quot");
			add("abt");
			add("ah");
			add("ah");
			add("aiya");
			add("aka");
			add("alot");
			add("alrdy");
			add("ar");
			add("ard");
			add("bah");
			add("blah");
			add("btw");
			add("bye");
			add("byes");
			add("cos");
			add("coz");
			add("damn");
			add("de");
			add("didn");
			add("didnt");
			add("don");
			add("dont");
			add("dun");
			add("dunno");
			add("eh");
			add("ei");
			add("gonna");
			add("gor");
			add("gotta");
			add("ha");
			add("haha");
			add("hahaha");
			add("hai");
			add("havent");
			add("hi");
			add("hehe");
			add("hey");
			add("hm");
			add("hmhm");
			add("hmm");
			add("huh");
			add("hw");
			add("im");
			add("kinda");
			add("la");
			add("lah");
			add("lar");
			add("le");
			add("leh");
			add("liao");
			add("lo");
			add("lol");
			add("lor");
			add("ma");
			add("mah");
			add("meh");
			add("neh");
			add("niao");
			add("nt");
			add("nv");
			add("nvr");
			add("omg");
			add("oops");
			add("oso");
			add("pls");
			add("rah");
			add("seh");
			add("shld");
			add("shldn");
			add("shldnt");
			add("sian");
			add("sians");
			add("ur");
			add("ve");
			add("wah");
			add("wanna");
			add("wat");
			add("wh");
			add("wtf");
			add("zeh");
			add("liaoz");
			add("beh");
			add("kan");
			add("ai");
			add("yah");
			add("sia");
			add("loh");
			add("ler");
			add("hor");
		}
	});
}
